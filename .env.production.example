# ============================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ============================================
# This file contains production-specific environment variable examples
# Copy this to your production environment and update with actual values
# NEVER commit actual production values to version control

# ============================================
# REQUIRED ENVIRONMENT VARIABLES
# ============================================

# Database Configuration
# Use a production PostgreSQL database with SSL enabled
# Connection pooling is automatically added by the application in production
# 
# For Vercel Postgres:
# - Use the POSTGRES_PRISMA_URL for pooled connections (recommended)
# - Use the POSTGRES_URL_NON_POOLING for direct connections (migrations only)
# 
# Example with Vercel Postgres (pooled):
# DATABASE_URL="postgres://user:pass@pooled-host.postgres.vercel-storage.com:5432/verceldb?sslmode=require"
# 
# Example with external PostgreSQL + PgBouncer:
# DATABASE_URL="postgresql://user:password@pgbouncer-host:6432/mais_inventory?schema=public&sslmode=require"
DATABASE_URL="postgresql://user:password@production-host:5432/mais_inventory?schema=public&sslmode=require"

# Direct database connection URL (without connection pooling)
# REQUIRED for running Prisma migrations in production
# This should point directly to PostgreSQL, bypassing any connection pooler
# 
# For Vercel Postgres, use POSTGRES_URL_NON_POOLING
# Example: postgres://user:pass@direct-host.postgres.vercel-storage.com:5432/verceldb?sslmode=require
DATABASE_URL_DIRECT="postgresql://user:password@direct-production-host:5432/mais_inventory?schema=public&sslmode=require"

# Database Connection Pool Settings
# These are automatically applied in production mode
DATABASE_POOL_MIN="2"
DATABASE_POOL_MAX="10"
DATABASE_POOL_TIMEOUT="20"

# NextAuth Configuration
# CRITICAL: Generate a strong secret for production
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET="REPLACE_WITH_STRONG_SECRET_AT_LEAST_32_CHARS"

# Production application URL (must use HTTPS)
NEXTAUTH_URL="https://yourdomain.com"

# Gemini AI Configuration
# Use a production API key with appropriate quotas
GEMINI_API_KEY="AIzaSy_YOUR_PRODUCTION_API_KEY"
GEMINI_MODEL="gemini-1.5-pro"

# Application Environment
NODE_ENV="production"

# Public Application URL
NEXT_PUBLIC_APP_URL="https://yourdomain.com"

# ============================================
# Feature Flags
# ============================================

NEXT_PUBLIC_ENABLE_AI_INSIGHTS="true"
NEXT_PUBLIC_ENABLE_AUTO_BACKUP="true"
ENABLE_AUDIT_SYSTEM="true"
ENABLE_BACKUP_SYSTEM="true"
ENABLE_REPORT_SYSTEM="true"

# ============================================
# RECOMMENDED: Security Configuration
# ============================================

# Audit log signing secret (HIGHLY RECOMMENDED for production)
# Generate with: openssl rand -base64 32
AUDIT_SIGNING_SECRET="REPLACE_WITH_STRONG_SECRET"

# Backup encryption key (HIGHLY RECOMMENDED for production)
# Generate with: openssl rand -base64 32
BACKUP_ENCRYPTION_KEY="REPLACE_WITH_STRONG_SECRET"

# Production security settings
RATE_LIMIT_PER_MINUTE="100"
SESSION_TIMEOUT="30"
MAX_LOGIN_ATTEMPTS="5"

# ============================================
# Storage Configuration
# ============================================

# Use absolute paths in production
# Ensure these directories exist and have proper permissions
BACKUP_STORAGE_PATH="/var/backups/mais-inventory"
REPORT_STORAGE_PATH="/var/reports/mais-inventory"
BACKUP_MAX_STORAGE_GB="500"

# ============================================
# Email Configuration (RECOMMENDED)
# ============================================
# Email is important for production notifications

# Production SMTP settings
SMTP_HOST="smtp.gmail.com"
SMTP_PORT="587"
SMTP_SECURE="false"
SMTP_USER="your-production-email@gmail.com"
SMTP_PASSWORD="your-app-specific-password"
SMTP_FROM="noreply@yourdomain.com"
SMTP_FROM_NAME="Saudi Mais Inventory System"
ADMIN_EMAIL="admin@yourdomain.com"

# ============================================
# Logging Configuration
# ============================================

# Production logging (less verbose)
DEBUG_MODE="false"
LOG_LEVEL="error"

# ============================================
# Scheduling Configuration
# ============================================

CRON_TIMEZONE="Asia/Riyadh"

# ============================================
# OPTIONAL: Redis Configuration
# ============================================

# Redis for async audit logging (recommended for high-traffic production)
# AUDIT_QUEUE_REDIS_URL="redis://username:password@production-redis-host:6379"

# ============================================
# DEPLOYMENT NOTES
# ============================================
#
# 1. SSL/TLS:
#    - Always use HTTPS in production (enforced by NEXTAUTH_URL)
#    - Enable SSL for database connections (sslmode=require)
#
# 2. Secrets Management:
#    - Use environment variable encryption (Vercel, AWS Secrets Manager, etc.)
#    - Rotate secrets regularly (every 90 days recommended)
#    - Never commit actual secrets to version control
#
# 3. Database:
#    - Use connection pooling for better performance
#    - Enable automated backups at database level
#    - Monitor connection pool usage
#
# 4. Monitoring:
#    - Enable Vercel Analytics or similar monitoring
#    - Set up error tracking (Sentry, LogRocket, etc.)
#    - Configure alerts for critical errors
#
# 5. Performance:
#    - Use CDN for static assets (Vercel Edge Network)
#    - Enable caching where appropriate
#    - Monitor Core Web Vitals
#
# 6. Backup Strategy:
#    - Test backup restoration regularly
#    - Store backups in multiple locations
#    - Encrypt all backups in production
#
# 7. Security:
#    - Keep all dependencies updated
#    - Run security audits regularly (npm audit)
#    - Enable rate limiting
#    - Use strong secrets (minimum 32 characters)
#    - Enable audit logging with signing
#
